{"version":3,"sources":["components/DataTable/DataTable.module.css","App.module.css","components/DataInputs/DataInputs.module.css","components/DataInputs/TextInput/TextInput.module.css","store/inputsReducer.ts","database/database.ts","components/DataInputs/TextInput/TextInput.tsx","components/DataInputs/DataInputs.tsx","components/DataTable/Today/Today.tsx","components/DataTable/AllDays/AllDays.tsx","components/DataTable/DataTable.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","Actions","now","moment","format","initialState","transactions","addIncomes","value","day","type","ADD_INCOMES","addOutcomes","ADD_OUTCOMES","db","version","stores","this","where","equals","toArray","Dexie","TextInput","props","useState","setValue","dispatch","useDispatch","onValueAdd","addValue","newItem","id","v1","addDate","add","className","s","textInput","TextField","variant","onChange","e","Number","currentTarget","onKeyPress","key","Button","color","onClick","DataInputs","main","incomeValue","outcomeValue","Today","incomes","useLiveQuery","table","outcomes","incomesSum","reduce","acc","cur","outcomesSum","diff","Card","raised","outputCard","cardTitle","cardValue","AllDays","slice","lastIndexOf","date","setDate","filter","tr","TableContainer","component","Paper","style","backgroundColor","Table","minWidth","TableHead","TableRow","TableCell","TableBody","map","row","DataTable","navbar","exact","to","navLink","activeClassName","activeLink","elevation","outputs","path","render","App","app","title","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","inputsReducer","state","action","newIncome","newOutcome","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13bb85b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DataTable_table__3m1oN\",\"navbar\":\"DataTable_navbar__1-cRz\",\"navLink\":\"DataTable_navLink__2BwaU\",\"activeLink\":\"DataTable_activeLink__W5e4v\",\"outputCard\":\"DataTable_outputCard__3VbvJ\",\"outputs\":\"DataTable_outputs__2Mzbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2sPq6\",\"title\":\"App_title__G5e3L\",\"container\":\"App_container__1m9xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DataInputs_main__1611N\",\"incomes\":\"DataInputs_incomes__11UGi\",\"outcomes\":\"DataInputs_outcomes__fq2fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"TextInput_textInput__LPbGB\"};","import moment from \"moment\";\r\nimport {ITransaction} from \"../database/database\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport enum Actions {\r\n    ADD_INCOMES = 'ADD_INCOMES',\r\n    ADD_OUTCOMES = 'ADD_OUTCOMES',\r\n}\r\n\r\ntype AddIncomesActionType = ReturnType<typeof addIncomes>\r\ntype AddOutcomesActionType = ReturnType<typeof addOutcomes>\r\nexport type ActionsType =\r\n    AddIncomesActionType\r\n    | AddOutcomesActionType\r\n\r\ntype InitialStateType = {\r\n    transactions: Array<ITransaction>\r\n}\r\n\r\nexport const now = moment().format('YYYY-MM-DD')\r\n\r\nconst initialState: InitialStateType = {\r\n    transactions: []\r\n}\r\n\r\nexport const inputsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case Actions.ADD_INCOMES:\r\n            const newIncome: ITransaction = {id: v1(), type: 'income', value: action.value, addDate: action.day}\r\n            return {...state, transactions: [...state.transactions, newIncome]}\r\n\r\n        case Actions.ADD_OUTCOMES:\r\n            const newOutcome: ITransaction = {id: v1(), type: 'outcome', value: action.value, addDate: action.day}\r\n            return {...state, transactions: [...state.transactions, newOutcome]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addIncomes = (value: number, day: string) => {\r\n    return {\r\n        type: Actions.ADD_INCOMES,\r\n        day,\r\n        value,\r\n    } as const\r\n}\r\nexport const addOutcomes = (value: number, day: string) => {\r\n    return {\r\n        type: Actions.ADD_OUTCOMES,\r\n        day,\r\n        value,\r\n    } as const\r\n}","import Dexie from \"dexie\";\r\nimport {now} from \"../store/inputsReducer\";\r\n\r\nexport interface ITransaction {\r\n    id: string\r\n    type: 'income' | 'outcome'\r\n    value: number\r\n    addDate: string\r\n}\r\n\r\nclass MoneysDB extends Dexie {\r\n    transactions!: Dexie.Table<ITransaction, string>;\r\n\r\n    constructor() {\r\n        super('MoneyManager')\r\n        this.version(1).stores({\r\n            transactions: 'id, type, value, addDate'\r\n        })\r\n    }\r\n    getData() {\r\n        return this.transactions.where('addDate').equals(now).toArray()\r\n    }\r\n}\r\n\r\nexport const db = new MoneysDB()\r\n\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\r\nimport s from './TextInput.module.css'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType, now} from \"../../../store/inputsReducer\";\r\nimport {db} from \"../../../database/database\";\r\nimport {v1} from \"uuid\";\r\n\r\ntype PropsType = {\r\n    addValue: (value: number, day: string) => ActionsType\r\n    type: 'income' | 'outcome'\r\n}\r\n\r\nconst TextInput = (props: PropsType) => {\r\n\r\n    const [value, setValue] = useState<number>(0)\r\n    const dispatch = useDispatch<Dispatch>()\r\n\r\n    const onValueChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        Number(e.currentTarget.value) ? setValue(+e.currentTarget.value) : setValue(0)\r\n    }\r\n    const onValueAdd = () => {\r\n        if (value) {\r\n            dispatch(props.addValue(+value, now))\r\n            const newItem = {id: v1(), type: props.type, value: value, addDate: now}\r\n            db.transactions.add(newItem)\r\n            setValue(0)\r\n        }\r\n    }\r\n    const onEnterPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onValueAdd()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.textInput}>\r\n            <TextField\r\n                variant='outlined'\r\n                onChange={onValueChange}\r\n                value={value}\r\n                onKeyPress={onEnterPress}\r\n            />\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={onValueAdd}\r\n            >Добавить\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport s from './DataInputs.module.css'\r\nimport TextInput from \"./TextInput/TextInput\";\r\nimport {addIncomes, addOutcomes} from \"../../store/inputsReducer\";\r\n\r\nconst DataInputs = () => {\r\n\r\n    return (\r\n        <main className={s.main}>\r\n            <section className={s.incomeValue}>\r\n                <h3>Доходы</h3>\r\n                <TextInput addValue={addIncomes} type={'income'}/>\r\n            </section>\r\n            <section className={s.outcomeValue}>\r\n                <h3>Расходы</h3>\r\n                <TextInput addValue={addOutcomes} type={'outcome'}/>\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default DataInputs;","import React from 'react';\r\nimport {Card} from \"@material-ui/core\";\r\nimport s from \"../DataTable.module.css\";\r\nimport {db} from \"../../../database/database\";\r\nimport {useLiveQuery} from \"dexie-react-hooks\";\r\n\r\nconst Today = () => {\r\n\r\n    const incomes = useLiveQuery(\r\n        () => db\r\n            .table('transactions')\r\n            .where('type')\r\n            .equals('income')\r\n            .toArray()\r\n    )\r\n    const outcomes = useLiveQuery(\r\n        () => db\r\n            .table('transactions')\r\n            .where('type')\r\n            .equals('outcome')\r\n            .toArray()\r\n    )\r\n    if (!incomes || !outcomes) return null\r\n\r\n    const incomesSum = incomes.reduce((acc, cur) => {\r\n        return acc + cur.value\r\n    }, 0)\r\n    const outcomesSum = outcomes.reduce((acc, cur) => {\r\n        return acc + cur.value\r\n    }, 0)\r\n    const diff = incomesSum - outcomesSum\r\n\r\n    return (\r\n        <>\r\n            <Card raised className={s.outputCard}>\r\n                <h3 className={s.cardTitle}>\r\n                    Всего заработано\r\n                </h3>\r\n                <div className={s.cardValue}>\r\n                    {incomesSum}\r\n                </div>\r\n            </Card>\r\n            <Card raised className={s.outputCard}>\r\n                <h3 className={s.cardTitle}>\r\n                    Всего потрачено\r\n                </h3>\r\n                <div className={s.cardValue}>\r\n                    {outcomesSum}\r\n                </div>\r\n            </Card>\r\n            <Card raised className={s.outputCard}>\r\n                <h3 className={s.cardTitle}>\r\n                    Разница\r\n                </h3>\r\n                <div className={s.cardValue}>\r\n                    {diff}\r\n                </div>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Today;","import React, {useState} from 'react';\r\nimport {db} from \"../../../database/database\";\r\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport {now} from \"../../../store/inputsReducer\";\r\nimport {useLiveQuery} from \"dexie-react-hooks\";\r\n\r\nconst AllDays = () => {\r\n    const [date, setDate] = useState<string>(now.slice(0, now.lastIndexOf('-')))\r\n    const transactions = useLiveQuery(\r\n        () => db\r\n            .table('transactions')\r\n            .where('addDate')\r\n            .equals(date + now.slice(-3)).toArray(),\r\n        [date])\r\n    if (!transactions) return null\r\n\r\n    const incomesSum = transactions.filter(tr => tr.type === 'income').reduce((acc, cur) => {\r\n        return acc + cur.value\r\n    }, 0)\r\n    const outcomesSum = transactions.filter(tr => tr.type === 'outcome').reduce((acc, cur) => {\r\n        return acc + cur.value\r\n    }, 0)\r\n    const diff = incomesSum - outcomesSum\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <span>Выбери месяц </span>\r\n                <input type=\"month\" value={date} onChange={e => setDate(e.currentTarget.value)}/>\r\n            </div>\r\n            <TableContainer component={Paper} style={{backgroundColor: '#3f51b545'}}>\r\n                <Table style={{minWidth: 650}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>День (ГГГГ-ММ-ДД)</TableCell>\r\n                            <TableCell>Доход/расход</TableCell>\r\n                            <TableCell>Значение</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {transactions.map(row =>\r\n                            <TableRow key={row.id}>\r\n                                <TableCell>{row.addDate}</TableCell>\r\n                                <TableCell>{row.type === 'income' ? 'Доход' : 'Расход'}</TableCell>\r\n                                <TableCell>{row.value}</TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <span>Всего доход за месяц: {diff}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AllDays;","import React from 'react';\r\nimport s from './DataTable.module.css'\r\nimport {Paper} from \"@material-ui/core\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport Today from \"./Today/Today\";\r\nimport AllDays from \"./AllDays/AllDays\";\r\n\r\nconst DataTable = () => {\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <nav className={s.navbar}>\r\n                <NavLink exact to={'/'} className={s.navLink} activeClassName={s.activeLink}>Сегодня</NavLink>\r\n                <NavLink exact to={'/all'} className={s.navLink} activeClassName={s.activeLink}>Все дни</NavLink>\r\n                Выбери вкладку (потом пофикшу)\r\n            </nav>\r\n            <Paper elevation={8} className={s.outputs} style={{backgroundColor: '#3f51b545'}}>\r\n                <Route path={'/'} exact render={() =>\r\n                    <Today/>}\r\n                />\r\n                <Route path={'/all'} exact render={() => <AllDays/>}/>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataTable;","import React from 'react';\nimport s from './App.module.css'\nimport DataInputs from \"./components/DataInputs/DataInputs\";\nimport DataTable from \"./components/DataTable/DataTable\";\n\nconst App = () => {\n    return (\n        <div className={s.app}>\n            <h1 className={s.title}>Лавэха</h1>\n            <div className={s.container}>\n                <DataInputs/>\n                <DataTable/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {inputsReducer} from \"./inputsReducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof store.getState>\r\n\r\nconst rootReducer = combineReducers({\r\n    inputsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}